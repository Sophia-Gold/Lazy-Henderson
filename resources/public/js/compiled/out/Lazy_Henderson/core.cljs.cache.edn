{:rename-macros {}, :renames {}, :use-macros {painter Lazy-Henderson.macros}, :excludes nil, :name Lazy-Henderson.core, :imports nil, :requires nil, :uses nil, :defs {draw {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 72, :column 7, :end-line 72, :end-column 11, :arglists (quote ([store]))}, :name Lazy-Henderson.core/draw, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 11, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store]))}, up-split {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 191, :column 7, :end-line 191, :end-column 15, :arglists (quote ([store n]))}, :name Lazy-Henderson.core/up-split, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 15, :method-params ([store n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 2, :fn-var true, :arglists (quote ([store n]))}, below-bottom {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 162, :column 7, :end-line 162, :end-column 19, :arglists (quote ([store]))}, :name Lazy-Henderson.core/below-bottom, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 19, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store]))}, beside-left {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 129, :column 7, :end-line 129, :end-column 18, :arglists (quote ([store]))}, :name Lazy-Henderson.core/beside-left, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 18, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store]))}, square-limit {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 207, :column 7, :end-line 207, :end-column 19, :arglists (quote ([store n]))}, :name Lazy-Henderson.core/square-limit, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 19, :method-params ([store n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 2, :fn-var true, :arglists (quote ([store n]))}, below {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 170, :column 7, :end-line 170, :end-column 12, :arglists (quote ([store]))}, :name Lazy-Henderson.core/below, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 12, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store]))}, make-frame {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 35, :column 7, :end-line 35, :end-column 17, :arglists (quote ([edge1 edge2 origin]))}, :name Lazy-Henderson.core/make-frame, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 17, :method-params ([edge1 edge2 origin]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists (quote ([edge1 edge2 origin]))}, xcor-vect {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 10, :column 7, :end-line 10, :end-column 16, :arglists (quote ([vect]))}, :name Lazy-Henderson.core/xcor-vect, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 16, :method-params ([vect]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vect]))}, origin-frame {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 44, :column 7, :end-line 44, :end-column 19, :arglists (quote ([frame]))}, :name Lazy-Henderson.core/origin-frame, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 19, :method-params ([frame]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([frame]))}, add-vect {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 15, :column 7, :end-line 15, :end-column 15, :arglists (quote ([v1 v2]))}, :name Lazy-Henderson.core/add-vect, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 15, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2]))}, make-vect {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 8, :column 7, :end-line 8, :end-column 16, :arglists (quote ([x y]))}, :name Lazy-Henderson.core/make-vect, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 16, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, draw-painter {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 54, :column 7, :end-line 54, :end-column 19, :arglists (quote ([ctx image]))}, :name Lazy-Henderson.core/draw-painter, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 19, :method-params ([ctx image]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx image]))}, corner-split {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 198, :column 7, :end-line 198, :end-column 19, :arglists (quote ([store n]))}, :name Lazy-Henderson.core/corner-split, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 19, :method-params ([store n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 2, :fn-var true, :arglists (quote ([store n]))}, ycor-vect {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 12, :column 7, :end-line 12, :end-column 16, :arglists (quote ([vect]))}, :name Lazy-Henderson.core/ycor-vect, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 16, :method-params ([vect]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vect]))}, end-segment {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 32, :column 7, :end-line 32, :end-column 18, :arglists (quote ([segment]))}, :name Lazy-Henderson.core/end-segment, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 18, :method-params ([segment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([segment]))}, flip-vert {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 84, :column 7, :end-line 84, :end-column 16, :arglists (quote ([store]))}, :name Lazy-Henderson.core/flip-vert, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 16, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store]))}, sub-vect {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 19, :column 7, :end-line 19, :end-column 15, :arglists (quote ([v1 v2]))}, :name Lazy-Henderson.core/sub-vect, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 15, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2]))}, beside-right {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 137, :column 7, :end-line 137, :end-column 19, :arglists (quote ([store]))}, :name Lazy-Henderson.core/beside-right, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 19, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store]))}, flip-horiz {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 97, :column 7, :end-line 97, :end-column 17, :arglists (quote ([store]))}, :name Lazy-Henderson.core/flip-horiz, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 17, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store]))}, below-top {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 152, :column 7, :end-line 152, :end-column 16, :arglists (quote ([store]))}, :name Lazy-Henderson.core/below-top, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 16, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store]))}, right-split {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 184, :column 7, :end-line 184, :end-column 18, :arglists (quote ([store n]))}, :name Lazy-Henderson.core/right-split, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 18, :method-params ([store n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 2, :fn-var true, :arglists (quote ([store n]))}, george {:name Lazy-Henderson.core/george, :file "src/Lazy_Henderson/core.cljs", :line 217, :column 1, :end-line 217, :end-column 12, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 217, :column 6, :end-line 217, :end-column 12}}, make-segment {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 28, :column 7, :end-line 28, :end-column 19, :arglists (quote ([v1 v2]))}, :name Lazy-Henderson.core/make-segment, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 19, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2]))}, rotate90 {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 110, :column 7, :end-line 110, :end-column 15, :arglists (quote ([store]))}, :name Lazy-Henderson.core/rotate90, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 15, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store]))}, start-segment {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 30, :column 7, :end-line 30, :end-column 20, :arglists (quote ([segment]))}, :name Lazy-Henderson.core/start-segment, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 20, :method-params ([segment]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([segment]))}, beside {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 147, :column 7, :end-line 147, :end-column 13, :arglists (quote ([store]))}, :name Lazy-Henderson.core/beside, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 13, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store]))}, scale-vect {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 23, :column 7, :end-line 23, :end-column 17, :arglists (quote ([s v]))}, :name Lazy-Henderson.core/scale-vect, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 17, :method-params ([s v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s v]))}, transform-painter {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 51, :column 7, :end-line 51, :end-column 24, :arglists (quote ([ctx frame]))}, :name Lazy-Henderson.core/transform-painter, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 24, :method-params ([ctx frame]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx frame]))}, edge2-frame {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 42, :column 7, :end-line 42, :end-column 18, :arglists (quote ([frame]))}, :name Lazy-Henderson.core/edge2-frame, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 18, :method-params ([frame]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([frame]))}, flipped-pairs {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 174, :column 7, :end-line 174, :end-column 20, :arglists (quote ([store]))}, :name Lazy-Henderson.core/flipped-pairs, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 20, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store]))}, edge1-frame {:protocol-inline nil, :meta {:file "/home/sophia/Desktop/Clojure/Lazy-Henderson/src/Lazy_Henderson/core.cljs", :line 40, :column 7, :end-line 40, :end-column 18, :arglists (quote ([frame]))}, :name Lazy-Henderson.core/edge1-frame, :variadic false, :file "src/Lazy_Henderson/core.cljs", :end-column 18, :method-params ([frame]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([frame]))}}, :require-macros {macros Lazy-Henderson.macros, Lazy-Henderson.macros Lazy-Henderson.macros}, :cljs.analyzer/constants {:seen #{:frame :image :ctx}, :order [:ctx :image :frame]}, :doc nil}